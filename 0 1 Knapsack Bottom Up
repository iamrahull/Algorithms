int Knapsack(vector<int> &A, vector<int> &B, int C) {
    
    vector< vector<int> >dp(A.size()+1, vector<int>(C+1,0));
    // A is Price Array
    // B is Weight Array
    // C is the Capacity
    // i is the pointer to the current element to the Array
    // j is the pointer to the current capacity of the knapsack
    
    for(int i=1;i<=A.size();i++)
    {
        for(int j=1;j<=C;j++)
        {
            if(B[i-1]>j)
            {
                dp[i][j]=dp[i-1][j];
            }
            else
            {
                dp[i][j]=max(dp[i-1][j],dp[i-1][j-B[i-1]]+A[i-1]);
            }
        }
    }
    return dp[A.size()][C];
}
