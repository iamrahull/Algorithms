class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum=accumulate(nums.begin(),nums.end(),0);
        if(sum&1)return 0;
        
        int subset=sum/2;
        
        vector< vector<bool>>dp( nums.size()+1, vector<bool>(subset+1,0));
        
        for(int i=0;i<=nums.size();i++)dp[i][0]=1;
        
        for(int i=1;i<=nums.size();i++)
        {
            for(int j=1;j<=subset;j++)
            {
                if(nums[i-1]>j)dp[i][j]=dp[i-1][j];
                else dp[i][j]= max(dp[i-1][j],dp[i-1][j-nums[i-1]]);
            }
        }
        return dp[nums.size()][subset];
    
    
    
    }
};
